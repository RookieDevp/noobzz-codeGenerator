/*
 Navicat Premium Data Transfer

 Source Server         : noobzzdb.mysql.rds.aliyuncs.com
 Source Server Type    : MySQL
 Source Server Version : 80025
 Source Host           : noobzzdb.mysql.rds.aliyuncs.com:3306
 Source Schema         : noobzz-gen

 Target Server Type    : MySQL
 Target Server Version : 80025
 File Encoding         : 65001

 Date: 25/06/2023 15:43:36
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for gen_datasource
-- ----------------------------
DROP TABLE IF EXISTS `gen_datasource`;
CREATE TABLE `gen_datasource`  (
  `datasource_id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '数据源ID',
  `connection_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '连接名',
  `url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '连接url',
  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户名',
  `password` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '密码',
  `data_base_type` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '数据库类型',
  `create_time` datetime NOT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  `status` varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '1' COMMENT '数据状态',
  PRIMARY KEY (`datasource_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '数据源表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_datasource
-- ----------------------------
INSERT INTO `gen_datasource` VALUES (1, 'localhost', 'jdbc:mysql://localhost:3306/ry-cloud?serverTimezone=GMT%2B8', 'root', '123456', 'Mysql', '2023-04-28 02:15:03', '2023-04-28 01:35:12', '1');

-- ----------------------------
-- Table structure for gen_table
-- ----------------------------
DROP TABLE IF EXISTS `gen_table`;
CREATE TABLE `gen_table`  (
  `table_id` bigint NOT NULL AUTO_INCREMENT COMMENT '编号',
  `table_name` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '' COMMENT '表名称',
  `table_comment` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '' COMMENT '表描述',
  `sub_table_name` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '关联子表的表名',
  `sub_table_fk_name` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '子表关联的外键名',
  `class_name` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '' COMMENT '实体类名称',
  `tpl_category` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT 'crud' COMMENT '使用的模板（crud单表操作 tree树表操作）',
  `package_name` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '生成包路径',
  `module_name` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '生成模块名',
  `business_name` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '生成业务名',
  `function_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '生成功能名',
  `function_author` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '生成功能作者',
  `gen_type` char(1) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '0' COMMENT '生成代码方式（0zip压缩包 1自定义路径）',
  `gen_path` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '/' COMMENT '生成路径（不填默认项目路径）',
  `options` varchar(1000) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '其它生成选项',
  `create_by` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '' COMMENT '创建者',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '' COMMENT '更新者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  `remark` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '备注',
  `template_selector` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '模板选择列表',
  `from_datasource` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '数据源',
  PRIMARY KEY (`table_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 129 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '代码生成业务表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of gen_table
-- ----------------------------

-- ----------------------------
-- Table structure for gen_table_column
-- ----------------------------
DROP TABLE IF EXISTS `gen_table_column`;
CREATE TABLE `gen_table_column`  (
  `column_id` bigint NOT NULL AUTO_INCREMENT COMMENT '编号',
  `table_id` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '归属表编号',
  `column_name` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '列名称',
  `column_comment` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '列描述',
  `column_type` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '列类型',
  `java_type` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT 'JAVA类型',
  `java_field` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT 'JAVA字段名',
  `is_pk` char(1) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '是否主键（1是）',
  `is_increment` char(1) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '是否自增（1是）',
  `is_required` char(1) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '是否必填（1是）',
  `is_insert` char(1) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '是否为插入字段（1是）',
  `is_edit` char(1) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '是否编辑字段（1是）',
  `is_list` char(1) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '是否列表字段（1是）',
  `is_query` char(1) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '是否查询字段（1是）',
  `query_type` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT 'EQ' COMMENT '查询方式（等于、不等于、大于、小于、范围）',
  `html_type` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '显示类型（文本框、文本域、下拉框、复选框、单选框、日期控件）',
  `dict_type` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '' COMMENT '字典类型',
  `sort` int NULL DEFAULT NULL COMMENT '排序',
  `create_by` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '' COMMENT '创建者',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '' COMMENT '更新者',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`column_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1130 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '代码生成业务表字段' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of gen_table_column
-- ----------------------------

-- ----------------------------
-- Table structure for gen_template
-- ----------------------------
DROP TABLE IF EXISTS `gen_template`;
CREATE TABLE `gen_template`  (
  `template_id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '模板ID',
  `parent_id` bigint NULL DEFAULT NULL COMMENT '父模板ID',
  `template_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '模板名称',
  `template_type` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '模板类型(M 目录，F 文件)',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '模板内容',
  `path` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '路径',
  `file_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '文件名',
  `file_type` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '文件类型',
  `create_time` datetime NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '创建时间',
  `remark` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '备注',
  `status` varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '0' COMMENT '状态',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`template_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 81 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '模板信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_template
-- ----------------------------
INSERT INTO `gen_template` VALUES (1, 0, 'vm', 'M', NULL, 'vm', NULL, NULL, '2022-09-24 20:08:53', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (40, 1, 'default', 'M', '', 'vm/default', NULL, NULL, '2022-10-14 21:34:36', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (59, 1, 'ruoyi', 'M', NULL, 'vm/ruoyi', NULL, NULL, '2022-10-29 00:16:03', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (60, 59, 'java', 'M', '', 'vm/ruoyi/java', NULL, NULL, '2022-10-29 00:19:02', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (61, 59, 'js', 'M', NULL, 'vm/ruoyi/js', NULL, NULL, '2022-10-29 00:20:12', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (62, 59, 'sql', 'M', NULL, 'vm/ruoyi/sql', NULL, NULL, '2022-10-29 00:21:09', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (63, 59, 'vue', 'M', NULL, 'vm/ruoyi/vue', NULL, NULL, '2022-10-29 00:21:12', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (64, 59, 'xml', 'M', NULL, 'vm/ruoyi/xml', NULL, NULL, '2022-10-29 00:21:14', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (65, 60, 'controller', 'F', 'package ${packageName}.controller;\r\n\r\nimport java.util.List;\r\nimport java.io.IOException;\r\nimport javax.servlet.http.HttpServletResponse;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.PutMapping;\r\nimport org.springframework.web.bind.annotation.DeleteMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport com.ruoyi.common.log.annotation.Log;\r\nimport com.ruoyi.common.log.enums.BusinessType;\r\nimport com.ruoyi.common.security.annotation.RequiresPermissions;\r\nimport ${packageName}.domain.${ClassName};\r\nimport ${packageName}.service.I${ClassName}Service;\r\nimport com.ruoyi.common.core.web.controller.BaseController;\r\nimport com.ruoyi.common.core.web.domain.AjaxResult;\r\nimport com.ruoyi.common.core.utils.poi.ExcelUtil;\r\n#if($table.crud || $table.sub)\r\nimport com.ruoyi.common.core.web.page.TableDataInfo;\r\n#elseif($table.tree)\r\n#end\r\n\r\n/**\r\n * ${functionName}Controller\r\n * \r\n * @author ${author}\r\n * @date ${datetime}\r\n */\r\n@RestController\r\n@RequestMapping(\"/${businessName}\")\r\npublic class ${ClassName}Controller extends BaseController\r\n{\r\n    @Autowired\r\n    private I${ClassName}Service ${className}Service;\r\n\r\n    /**\r\n     * 查询${functionName}列表\r\n     */\r\n    @RequiresPermissions(\"${permissionPrefix}:list\")\r\n    @GetMapping(\"/list\")\r\n#if($table.crud || $table.sub)\r\n    public TableDataInfo list(${ClassName} ${className})\r\n    {\r\n        startPage();\r\n        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});\r\n        return getDataTable(list);\r\n    }\r\n#elseif($table.tree)\r\n    public AjaxResult list(${ClassName} ${className})\r\n    {\r\n        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});\r\n        return AjaxResult.success(list);\r\n    }\r\n#end\r\n\r\n    /**\r\n     * 导出${functionName}列表\r\n     */\r\n    @RequiresPermissions(\"${permissionPrefix}:export\")\r\n    @Log(title = \"${functionName}\", businessType = BusinessType.EXPORT)\r\n    @PostMapping(\"/export\")\r\n    public void export(HttpServletResponse response, ${ClassName} ${className})\r\n    {\r\n        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});\r\n        ExcelUtil<${ClassName}> util = new ExcelUtil<${ClassName}>(${ClassName}.class);\r\n        util.exportExcel(response, list, \"${functionName}数据\");\r\n    }\r\n\r\n    /**\r\n     * 获取${functionName}详细信息\r\n     */\r\n    @RequiresPermissions(\"${permissionPrefix}:query\")\r\n    @GetMapping(value = \"/{${pkColumn.javaField}}\")\r\n    public AjaxResult getInfo(@PathVariable(\"${pkColumn.javaField}\") ${pkColumn.javaType} ${pkColumn.javaField})\r\n    {\r\n        return AjaxResult.success(${className}Service.select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaField}));\r\n    }\r\n\r\n    /**\r\n     * 新增${functionName}\r\n     */\r\n    @RequiresPermissions(\"${permissionPrefix}:add\")\r\n    @Log(title = \"${functionName}\", businessType = BusinessType.INSERT)\r\n    @PostMapping\r\n    public AjaxResult add(@RequestBody ${ClassName} ${className})\r\n    {\r\n        return toAjax(${className}Service.insert${ClassName}(${className}));\r\n    }\r\n\r\n    /**\r\n     * 修改${functionName}\r\n     */\r\n    @RequiresPermissions(\"${permissionPrefix}:edit\")\r\n    @Log(title = \"${functionName}\", businessType = BusinessType.UPDATE)\r\n    @PutMapping\r\n    public AjaxResult edit(@RequestBody ${ClassName} ${className})\r\n    {\r\n        return toAjax(${className}Service.update${ClassName}(${className}));\r\n    }\r\n\r\n    /**\r\n     * 删除${functionName}\r\n     */\r\n    @RequiresPermissions(\"${permissionPrefix}:remove\")\r\n    @Log(title = \"${functionName}\", businessType = BusinessType.DELETE)\r\n	@DeleteMapping(\"/{${pkColumn.javaField}s}\")\r\n    public AjaxResult remove(@PathVariable ${pkColumn.javaType}[] ${pkColumn.javaField}s)\r\n    {\r\n        return toAjax(${className}Service.delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaField}s));\r\n    }\r\n}\r\n', 'vm/ruoyi/java/controller.java.vm', 'controller.java.vm', 'java', '2022-10-29 00:50:19', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (66, 60, 'domain', 'F', 'package ${packageName}.domain;\r\n\r\n#foreach ($import in $importList)\r\nimport ${import};\r\n#end\r\nimport org.apache.commons.lang3.builder.ToStringBuilder;\r\nimport org.apache.commons.lang3.builder.ToStringStyle;\r\nimport com.ruoyi.common.core.annotation.Excel;\r\n#if($table.crud || $table.sub)\r\nimport com.ruoyi.common.core.web.domain.BaseEntity;\r\n#elseif($table.tree)\r\nimport com.ruoyi.common.core.web.domain.TreeEntity;\r\n#end\r\n\r\n/**\r\n * ${functionName}对象 ${tableName}\r\n * \r\n * @author ${author}\r\n * @date ${datetime}\r\n */\r\n#if($table.crud || $table.sub)\r\n#set($Entity=\"BaseEntity\")\r\n#elseif($table.tree)\r\n#set($Entity=\"TreeEntity\")\r\n#end\r\npublic class ${ClassName} extends ${Entity}\r\n{\r\n    private static final long serialVersionUID = 1L;\r\n\r\n#foreach ($column in $columns)\r\n#if(!$table.isSuperColumn($column.javaField))\r\n    /** $column.columnComment */\r\n#if($column.list)\r\n#set($parentheseIndex=$column.columnComment.indexOf(\"（\"))\r\n#if($parentheseIndex != -1)\r\n#set($comment=$column.columnComment.substring(0, $parentheseIndex))\r\n#else\r\n#set($comment=$column.columnComment)\r\n#end\r\n#if($parentheseIndex != -1)\r\n    @Excel(name = \"${comment}\", readConverterExp = \"$column.readConverterExp()\")\r\n#elseif($column.javaType == \'Date\')\r\n    @JsonFormat(pattern = \"yyyy-MM-dd\")\r\n    @Excel(name = \"${comment}\", width = 30, dateFormat = \"yyyy-MM-dd\")\r\n#else\r\n    @Excel(name = \"${comment}\")\r\n#end\r\n#end\r\n    private $column.javaType $column.javaField;\r\n\r\n#end\r\n#end\r\n#if($table.sub)\r\n    /** $table.subTable.functionName信息 */\r\n    private List<${subClassName}> ${subclassName}List;\r\n\r\n#end\r\n#foreach ($column in $columns)\r\n#if(!$table.isSuperColumn($column.javaField))\r\n#if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches(\"[A-Z]\"))\r\n#set($AttrName=$column.javaField)\r\n#else\r\n#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})\r\n#end\r\n    public void set${AttrName}($column.javaType $column.javaField) \r\n    {\r\n        this.$column.javaField = $column.javaField;\r\n    }\r\n\r\n    public $column.javaType get${AttrName}() \r\n    {\r\n        return $column.javaField;\r\n    }\r\n#end\r\n#end\r\n\r\n#if($table.sub)\r\n    public List<${subClassName}> get${subClassName}List()\r\n    {\r\n        return ${subclassName}List;\r\n    }\r\n\r\n    public void set${subClassName}List(List<${subClassName}> ${subclassName}List)\r\n    {\r\n        this.${subclassName}List = ${subclassName}List;\r\n    }\r\n\r\n#end\r\n    @Override\r\n    public String toString() {\r\n        return new ToStringBuilder(this,ToStringStyle.MULTI_LINE_STYLE)\r\n#foreach ($column in $columns)\r\n#if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches(\"[A-Z]\"))\r\n#set($AttrName=$column.javaField)\r\n#else\r\n#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})\r\n#end\r\n            .append(\"${column.javaField}\", get${AttrName}())\r\n#end\r\n#if($table.sub)\r\n            .append(\"${subclassName}List\", get${subClassName}List())\r\n#end\r\n            .toString();\r\n    }\r\n}\r\n', 'vm/ruoyi/java/domain.java.vm', 'domain.java.vm', 'java', '2022-10-29 00:50:23', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (67, 60, 'mapper', 'F', 'package ${packageName}.mapper;\r\n\r\nimport java.util.List;\r\nimport ${packageName}.domain.${ClassName};\r\n#if($table.sub)\r\nimport ${packageName}.domain.${subClassName};\r\n#end\r\n\r\n/**\r\n * ${functionName}Mapper接口\r\n * \r\n * @author ${author}\r\n * @date ${datetime}\r\n */\r\npublic interface ${ClassName}Mapper \r\n{\r\n    /**\r\n     * 查询${functionName}\r\n     * \r\n     * @param ${pkColumn.javaField} ${functionName}主键\r\n     * @return ${functionName}\r\n     */\r\n    public ${ClassName} select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField});\r\n\r\n    /**\r\n     * 查询${functionName}列表\r\n     * \r\n     * @param ${className} ${functionName}\r\n     * @return ${functionName}集合\r\n     */\r\n    public List<${ClassName}> select${ClassName}List(${ClassName} ${className});\r\n\r\n    /**\r\n     * 新增${functionName}\r\n     * \r\n     * @param ${className} ${functionName}\r\n     * @return 结果\r\n     */\r\n    public int insert${ClassName}(${ClassName} ${className});\r\n\r\n    /**\r\n     * 修改${functionName}\r\n     * \r\n     * @param ${className} ${functionName}\r\n     * @return 结果\r\n     */\r\n    public int update${ClassName}(${ClassName} ${className});\r\n\r\n    /**\r\n     * 删除${functionName}\r\n     * \r\n     * @param ${pkColumn.javaField} ${functionName}主键\r\n     * @return 结果\r\n     */\r\n    public int delete${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField});\r\n\r\n    /**\r\n     * 批量删除${functionName}\r\n     * \r\n     * @param ${pkColumn.javaField}s 需要删除的数据主键集合\r\n     * @return 结果\r\n     */\r\n    public int delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaType}[] ${pkColumn.javaField}s);\r\n#if($table.sub)\r\n\r\n    /**\r\n     * 批量删除${subTable.functionName}\r\n     * \r\n     * @param ${pkColumn.javaField}s 需要删除的数据主键集合\r\n     * @return 结果\r\n     */\r\n    public int delete${subClassName}By${subTableFkClassName}s(${pkColumn.javaType}[] ${pkColumn.javaField}s);\r\n    \r\n    /**\r\n     * 批量新增${subTable.functionName}\r\n     * \r\n     * @param ${subclassName}List ${subTable.functionName}列表\r\n     * @return 结果\r\n     */\r\n    public int batch${subClassName}(List<${subClassName}> ${subclassName}List);\r\n    \r\n\r\n    /**\r\n     * 通过${functionName}主键删除${subTable.functionName}信息\r\n     * \r\n     * @param ${pkColumn.javaField} ${functionName}ID\r\n     * @return 结果\r\n     */\r\n    public int delete${subClassName}By${subTableFkClassName}(${pkColumn.javaType} ${pkColumn.javaField});\r\n#end\r\n}\r\n', 'vm/ruoyi/java/mapper.java.vm', 'mapper.java.vm', 'java', '2022-10-29 00:56:10', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (68, 60, 'service', 'F', 'package ${packageName}.service;\r\n\r\nimport java.util.List;\r\nimport ${packageName}.domain.${ClassName};\r\n\r\n/**\r\n * ${functionName}Service接口\r\n * \r\n * @author ${author}\r\n * @date ${datetime}\r\n */\r\npublic interface I${ClassName}Service \r\n{\r\n    /**\r\n     * 查询${functionName}\r\n     * \r\n     * @param ${pkColumn.javaField} ${functionName}主键\r\n     * @return ${functionName}\r\n     */\r\n    public ${ClassName} select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField});\r\n\r\n    /**\r\n     * 查询${functionName}列表\r\n     * \r\n     * @param ${className} ${functionName}\r\n     * @return ${functionName}集合\r\n     */\r\n    public List<${ClassName}> select${ClassName}List(${ClassName} ${className});\r\n\r\n    /**\r\n     * 新增${functionName}\r\n     * \r\n     * @param ${className} ${functionName}\r\n     * @return 结果\r\n     */\r\n    public int insert${ClassName}(${ClassName} ${className});\r\n\r\n    /**\r\n     * 修改${functionName}\r\n     * \r\n     * @param ${className} ${functionName}\r\n     * @return 结果\r\n     */\r\n    public int update${ClassName}(${ClassName} ${className});\r\n\r\n    /**\r\n     * 批量删除${functionName}\r\n     * \r\n     * @param ${pkColumn.javaField}s 需要删除的${functionName}主键集合\r\n     * @return 结果\r\n     */\r\n    public int delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaType}[] ${pkColumn.javaField}s);\r\n\r\n    /**\r\n     * 删除${functionName}信息\r\n     * \r\n     * @param ${pkColumn.javaField} ${functionName}主键\r\n     * @return 结果\r\n     */\r\n    public int delete${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField});\r\n}\r\n', 'vm/ruoyi/java/service.java.vm', 'service.java.vm', 'java', '2022-10-29 01:00:06', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (69, 60, 'serviceImpl', 'F', 'package ${packageName}.service.impl;\r\n\r\nimport java.util.List;\r\n#foreach ($column in $columns)\r\n#if($column.javaField == \'createTime\' || $column.javaField == \'updateTime\')\r\nimport com.ruoyi.common.core.utils.DateUtils;\r\n#break\r\n#end\r\n#end\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n#if($table.sub)\r\nimport java.util.ArrayList;\r\nimport com.ruoyi.common.core.utils.StringUtils;\r\nimport org.springframework.transaction.annotation.Transactional;\r\nimport ${packageName}.domain.${subClassName};\r\n#end\r\nimport ${packageName}.mapper.${ClassName}Mapper;\r\nimport ${packageName}.domain.${ClassName};\r\nimport ${packageName}.service.I${ClassName}Service;\r\n\r\n/**\r\n * ${functionName}Service业务层处理\r\n * \r\n * @author ${author}\r\n * @date ${datetime}\r\n */\r\n@Service\r\npublic class ${ClassName}ServiceImpl implements I${ClassName}Service \r\n{\r\n    @Autowired\r\n    private ${ClassName}Mapper ${className}Mapper;\r\n\r\n    /**\r\n     * 查询${functionName}\r\n     * \r\n     * @param ${pkColumn.javaField} ${functionName}主键\r\n     * @return ${functionName}\r\n     */\r\n    @Override\r\n    public ${ClassName} select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField})\r\n    {\r\n        return ${className}Mapper.select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaField});\r\n    }\r\n\r\n    /**\r\n     * 查询${functionName}列表\r\n     * \r\n     * @param ${className} ${functionName}\r\n     * @return ${functionName}\r\n     */\r\n    @Override\r\n    public List<${ClassName}> select${ClassName}List(${ClassName} ${className})\r\n    {\r\n        return ${className}Mapper.select${ClassName}List(${className});\r\n    }\r\n\r\n    /**\r\n     * 新增${functionName}\r\n     * \r\n     * @param ${className} ${functionName}\r\n     * @return 结果\r\n     */\r\n#if($table.sub)\r\n    @Transactional\r\n#end\r\n    @Override\r\n    public int insert${ClassName}(${ClassName} ${className})\r\n    {\r\n#foreach ($column in $columns)\r\n#if($column.javaField == \'createTime\')\r\n        ${className}.setCreateTime(DateUtils.getNowDate());\r\n#end\r\n#end\r\n#if($table.sub)\r\n        int rows = ${className}Mapper.insert${ClassName}(${className});\r\n        insert${subClassName}(${className});\r\n        return rows;\r\n#else\r\n        return ${className}Mapper.insert${ClassName}(${className});\r\n#end\r\n    }\r\n\r\n    /**\r\n     * 修改${functionName}\r\n     * \r\n     * @param ${className} ${functionName}\r\n     * @return 结果\r\n     */\r\n#if($table.sub)\r\n    @Transactional\r\n#end\r\n    @Override\r\n    public int update${ClassName}(${ClassName} ${className})\r\n    {\r\n#foreach ($column in $columns)\r\n#if($column.javaField == \'updateTime\')\r\n        ${className}.setUpdateTime(DateUtils.getNowDate());\r\n#end\r\n#end\r\n#if($table.sub)\r\n        ${className}Mapper.delete${subClassName}By${subTableFkClassName}(${className}.get${pkColumn.capJavaField}());\r\n        insert${subClassName}(${className});\r\n#end\r\n        return ${className}Mapper.update${ClassName}(${className});\r\n    }\r\n\r\n    /**\r\n     * 批量删除${functionName}\r\n     * \r\n     * @param ${pkColumn.javaField}s 需要删除的${functionName}主键\r\n     * @return 结果\r\n     */\r\n#if($table.sub)\r\n    @Transactional\r\n#end\r\n    @Override\r\n    public int delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaType}[] ${pkColumn.javaField}s)\r\n    {\r\n#if($table.sub)\r\n        ${className}Mapper.delete${subClassName}By${subTableFkClassName}s(${pkColumn.javaField}s);\r\n#end\r\n        return ${className}Mapper.delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaField}s);\r\n    }\r\n\r\n    /**\r\n     * 删除${functionName}信息\r\n     * \r\n     * @param ${pkColumn.javaField} ${functionName}主键\r\n     * @return 结果\r\n     */\r\n#if($table.sub)\r\n    @Transactional\r\n#end\r\n    @Override\r\n    public int delete${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField})\r\n    {\r\n#if($table.sub)\r\n        ${className}Mapper.delete${subClassName}By${subTableFkClassName}(${pkColumn.javaField});\r\n#end\r\n        return ${className}Mapper.delete${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaField});\r\n    }\r\n#if($table.sub)\r\n\r\n    /**\r\n     * 新增${subTable.functionName}信息\r\n     * \r\n     * @param ${className} ${functionName}对象\r\n     */\r\n    public void insert${subClassName}(${ClassName} ${className})\r\n    {\r\n        List<${subClassName}> ${subclassName}List = ${className}.get${subClassName}List();\r\n        ${pkColumn.javaType} ${pkColumn.javaField} = ${className}.get${pkColumn.capJavaField}();\r\n        if (StringUtils.isNotNull(${subclassName}List))\r\n        {\r\n            List<${subClassName}> list = new ArrayList<${subClassName}>();\r\n            for (${subClassName} ${subclassName} : ${subclassName}List)\r\n            {\r\n                ${subclassName}.set${subTableFkClassName}(${pkColumn.javaField});\r\n                list.add(${subclassName});\r\n            }\r\n            if (list.size() > 0)\r\n            {\r\n                ${className}Mapper.batch${subClassName}(list);\r\n            }\r\n        }\r\n    }\r\n#end\r\n}\r\n', 'vm/ruoyi/java/serviceImpl.java.vm', 'serviceImpl.java.vm', 'java', '2022-10-29 01:00:12', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (70, 60, 'sub-domain', 'F', 'package ${packageName}.domain;\r\n\r\n#foreach ($import in $subImportList)\r\nimport ${import};\r\n#end\r\nimport org.apache.commons.lang3.builder.ToStringBuilder;\r\nimport org.apache.commons.lang3.builder.ToStringStyle;\r\nimport com.ruoyi.common.core.annotation.Excel;\r\nimport com.ruoyi.common.core.web.domain.BaseEntity;\r\n\r\n/**\r\n * ${subTable.functionName}对象 ${subTableName}\r\n * \r\n * @author ${author}\r\n * @date ${datetime}\r\n */\r\npublic class ${subClassName} extends BaseEntity\r\n{\r\n    private static final long serialVersionUID = 1L;\r\n\r\n#foreach ($column in $subTable.columns)\r\n#if(!$table.isSuperColumn($column.javaField))\r\n    /** $column.columnComment */\r\n#if($column.list)\r\n#set($parentheseIndex=$column.columnComment.indexOf(\"（\"))\r\n#if($parentheseIndex != -1)\r\n#set($comment=$column.columnComment.substring(0, $parentheseIndex))\r\n#else\r\n#set($comment=$column.columnComment)\r\n#end\r\n#if($parentheseIndex != -1)\r\n    @Excel(name = \"${comment}\", readConverterExp = \"$column.readConverterExp()\")\r\n#elseif($column.javaType == \'Date\')\r\n    @JsonFormat(pattern = \"yyyy-MM-dd\")\r\n    @Excel(name = \"${comment}\", width = 30, dateFormat = \"yyyy-MM-dd\")\r\n#else\r\n    @Excel(name = \"${comment}\")\r\n#end\r\n#end\r\n    private $column.javaType $column.javaField;\r\n\r\n#end\r\n#end\r\n#foreach ($column in $subTable.columns)\r\n#if(!$table.isSuperColumn($column.javaField))\r\n#if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches(\"[A-Z]\"))\r\n#set($AttrName=$column.javaField)\r\n#else\r\n#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})\r\n#end\r\n    public void set${AttrName}($column.javaType $column.javaField) \r\n    {\r\n        this.$column.javaField = $column.javaField;\r\n    }\r\n\r\n    public $column.javaType get${AttrName}() \r\n    {\r\n        return $column.javaField;\r\n    }\r\n#end\r\n#end\r\n\r\n    @Override\r\n    public String toString() {\r\n        return new ToStringBuilder(this,ToStringStyle.MULTI_LINE_STYLE)\r\n#foreach ($column in $subTable.columns)\r\n#if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches(\"[A-Z]\"))\r\n#set($AttrName=$column.javaField)\r\n#else\r\n#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})\r\n#end\r\n            .append(\"${column.javaField}\", get${AttrName}())\r\n#end\r\n            .toString();\r\n    }\r\n}\r\n', 'vm/ruoyi/java/sub-domain.java.vm', 'sub-domain.java.vm', 'java', '2022-10-29 01:01:28', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (71, 61, 'api', 'F', 'import request from \'@/utils/request\'\r\n\r\n// 查询${functionName}列表\r\nexport function list${BusinessName}(query) {\r\n  return request({\r\n    url: \'/${moduleName}/${businessName}/list\',\r\n    method: \'get\',\r\n    params: query\r\n  })\r\n}\r\n\r\n// 查询${functionName}详细\r\nexport function get${BusinessName}(${pkColumn.javaField}) {\r\n  return request({\r\n    url: \'/${moduleName}/${businessName}/\' + ${pkColumn.javaField},\r\n    method: \'get\'\r\n  })\r\n}\r\n\r\n// 新增${functionName}\r\nexport function add${BusinessName}(data) {\r\n  return request({\r\n    url: \'/${moduleName}/${businessName}\',\r\n    method: \'post\',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 修改${functionName}\r\nexport function update${BusinessName}(data) {\r\n  return request({\r\n    url: \'/${moduleName}/${businessName}\',\r\n    method: \'put\',\r\n    data: data\r\n  })\r\n}\r\n\r\n// 删除${functionName}\r\nexport function del${BusinessName}(${pkColumn.javaField}) {\r\n  return request({\r\n    url: \'/${moduleName}/${businessName}/\' + ${pkColumn.javaField},\r\n    method: \'delete\'\r\n  })\r\n}\r\n', 'vm/ruoyi/js/api.js.vm', 'api.js.vm', 'js', '2022-10-29 01:01:41', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (72, 62, 'sql', 'F', '-- 菜单 SQL\r\ninsert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)\r\nvalues(\'${functionName}\', \'${parentMenuId}\', \'1\', \'${businessName}\', \'${moduleName}/${businessName}/index\', 1, 0, \'C\', \'0\', \'0\', \'${permissionPrefix}:list\', \'#\', \'admin\', sysdate(), \'\', null, \'${functionName}菜单\');\r\n\r\n-- 按钮父菜单ID\r\nSELECT @parentId := LAST_INSERT_ID();\r\n\r\n-- 按钮 SQL\r\ninsert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)\r\nvalues(\'${functionName}查询\', @parentId, \'1\',  \'#\', \'\', 1, 0, \'F\', \'0\', \'0\', \'${permissionPrefix}:query\',        \'#\', \'admin\', sysdate(), \'\', null, \'\');\r\n\r\ninsert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)\r\nvalues(\'${functionName}新增\', @parentId, \'2\',  \'#\', \'\', 1, 0, \'F\', \'0\', \'0\', \'${permissionPrefix}:add\',          \'#\', \'admin\', sysdate(), \'\', null, \'\');\r\n\r\ninsert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)\r\nvalues(\'${functionName}修改\', @parentId, \'3\',  \'#\', \'\', 1, 0, \'F\', \'0\', \'0\', \'${permissionPrefix}:edit\',         \'#\', \'admin\', sysdate(), \'\', null, \'\');\r\n\r\ninsert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)\r\nvalues(\'${functionName}删除\', @parentId, \'4\',  \'#\', \'\', 1, 0, \'F\', \'0\', \'0\', \'${permissionPrefix}:remove\',       \'#\', \'admin\', sysdate(), \'\', null, \'\');\r\n\r\ninsert into sys_menu (menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, remark)\r\nvalues(\'${functionName}导出\', @parentId, \'5\',  \'#\', \'\', 1, 0, \'F\', \'0\', \'0\', \'${permissionPrefix}:export\',       \'#\', \'admin\', sysdate(), \'\', null, \'\');', 'vm/ruoyi/sql/sql.vm', 'sql.vm', 'sql', '2022-10-29 01:02:23', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (73, 63, 'index', 'F', '<template>\r\n  <div class=\"app-container\">\r\n    <el-form :model=\"queryParams\" ref=\"queryForm\" size=\"small\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\r\n#foreach($column in $columns)\r\n#if($column.query)\r\n#set($dictType=$column.dictType)\r\n#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})\r\n#set($parentheseIndex=$column.columnComment.indexOf(\"（\"))\r\n#if($parentheseIndex != -1)\r\n#set($comment=$column.columnComment.substring(0, $parentheseIndex))\r\n#else\r\n#set($comment=$column.columnComment)\r\n#end\r\n#if($column.htmlType == \"input\")\r\n      <el-form-item label=\"${comment}\" prop=\"${column.javaField}\">\r\n        <el-input\r\n          v-model=\"queryParams.${column.javaField}\"\r\n          placeholder=\"请输入${comment}\"\r\n          clearable\r\n          @keyup.enter.native=\"handleQuery\"\r\n        />\r\n      </el-form-item>\r\n#elseif(($column.htmlType == \"select\" || $column.htmlType == \"radio\") && \"\" != $dictType)\r\n      <el-form-item label=\"${comment}\" prop=\"${column.javaField}\">\r\n        <el-select v-model=\"queryParams.${column.javaField}\" placeholder=\"请选择${comment}\" clearable>\r\n          <el-option\r\n            v-for=\"dict in dict.type.${dictType}\"\r\n            :key=\"dict.value\"\r\n            :label=\"dict.label\"\r\n            :value=\"dict.value\"\r\n          />\r\n        </el-select>\r\n      </el-form-item>\r\n#elseif(($column.htmlType == \"select\" || $column.htmlType == \"radio\") && $dictType)\r\n      <el-form-item label=\"${comment}\" prop=\"${column.javaField}\">\r\n        <el-select v-model=\"queryParams.${column.javaField}\" placeholder=\"请选择${comment}\" clearable>\r\n          <el-option label=\"请选择字典生成\" value=\"\" />\r\n        </el-select>\r\n      </el-form-item>\r\n#elseif($column.htmlType == \"datetime\" && $column.queryType != \"BETWEEN\")\r\n      <el-form-item label=\"${comment}\" prop=\"${column.javaField}\">\r\n        <el-date-picker clearable\r\n          v-model=\"queryParams.${column.javaField}\"\r\n          type=\"date\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          placeholder=\"请选择${comment}\">\r\n        </el-date-picker>\r\n      </el-form-item>\r\n#elseif($column.htmlType == \"datetime\" && $column.queryType == \"BETWEEN\")\r\n      <el-form-item label=\"${comment}\">\r\n        <el-date-picker\r\n          v-model=\"daterange${AttrName}\"\r\n          style=\"width: 240px\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          type=\"daterange\"\r\n          range-separator=\"-\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\"\r\n        ></el-date-picker>\r\n      </el-form-item>\r\n#end\r\n#end\r\n#end\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\r\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"primary\"\r\n          plain\r\n          icon=\"el-icon-plus\"\r\n          size=\"mini\"\r\n          @click=\"handleAdd\"\r\n          v-hasPermi=\"[\'${moduleName}:${businessName}:add\']\"\r\n        >新增</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"success\"\r\n          plain\r\n          icon=\"el-icon-edit\"\r\n          size=\"mini\"\r\n          :disabled=\"single\"\r\n          @click=\"handleUpdate\"\r\n          v-hasPermi=\"[\'${moduleName}:${businessName}:edit\']\"\r\n        >修改</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"danger\"\r\n          plain\r\n          icon=\"el-icon-delete\"\r\n          size=\"mini\"\r\n          :disabled=\"multiple\"\r\n          @click=\"handleDelete\"\r\n          v-hasPermi=\"[\'${moduleName}:${businessName}:remove\']\"\r\n        >删除</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"warning\"\r\n          plain\r\n          icon=\"el-icon-download\"\r\n          size=\"mini\"\r\n          @click=\"handleExport\"\r\n          v-hasPermi=\"[\'${moduleName}:${businessName}:export\']\"\r\n        >导出</el-button>\r\n      </el-col>\r\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\r\n    </el-row>\r\n\r\n    <el-table v-loading=\"loading\" :data=\"${businessName}List\" @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\r\n#foreach($column in $columns)\r\n#set($javaField=$column.javaField)\r\n#set($parentheseIndex=$column.columnComment.indexOf(\"（\"))\r\n#if($parentheseIndex != -1)\r\n#set($comment=$column.columnComment.substring(0, $parentheseIndex))\r\n#else\r\n#set($comment=$column.columnComment)\r\n#end\r\n#if($column.pk)\r\n      <el-table-column label=\"${comment}\" align=\"center\" prop=\"${javaField}\" />\r\n#elseif($column.list && $column.htmlType == \"datetime\")\r\n      <el-table-column label=\"${comment}\" align=\"center\" prop=\"${javaField}\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ parseTime(scope.row.${javaField}, \'{y}-{m}-{d}\') }}</span>\r\n        </template>\r\n      </el-table-column>\r\n#elseif($column.list && $column.htmlType == \"imageUpload\")\r\n      <el-table-column label=\"${comment}\" align=\"center\" prop=\"${javaField}\" width=\"100\">\r\n        <template slot-scope=\"scope\">\r\n          <image-preview :src=\"scope.row.${javaField}\" :width=\"50\" :height=\"50\"/>\r\n        </template>\r\n      </el-table-column>\r\n#elseif($column.list && \"\" != $column.dictType)\r\n      <el-table-column label=\"${comment}\" align=\"center\" prop=\"${javaField}\">\r\n        <template slot-scope=\"scope\">\r\n#if($column.htmlType == \"checkbox\")\r\n          <dict-tag :options=\"dict.type.${column.dictType}\" :value=\"scope.row.${javaField} ? scope.row.${javaField}.split(\',\') : []\"/>\r\n#else\r\n          <dict-tag :options=\"dict.type.${column.dictType}\" :value=\"scope.row.${javaField}\"/>\r\n#end\r\n        </template>\r\n      </el-table-column>\r\n#elseif($column.list && \"\" != $javaField)\r\n      <el-table-column label=\"${comment}\" align=\"center\" prop=\"${javaField}\" />\r\n#end\r\n#end\r\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"text\"\r\n            icon=\"el-icon-edit\"\r\n            @click=\"handleUpdate(scope.row)\"\r\n            v-hasPermi=\"[\'${moduleName}:${businessName}:edit\']\"\r\n          >修改</el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"text\"\r\n            icon=\"el-icon-delete\"\r\n            @click=\"handleDelete(scope.row)\"\r\n            v-hasPermi=\"[\'${moduleName}:${businessName}:remove\']\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    \r\n    <pagination\r\n      v-show=\"total>0\"\r\n      :total=\"total\"\r\n      :page.sync=\"queryParams.pageNum\"\r\n      :limit.sync=\"queryParams.pageSize\"\r\n      @pagination=\"getList\"\r\n    />\r\n\r\n    <!-- 添加或修改${functionName}对话框 -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n#foreach($column in $columns)\r\n#set($field=$column.javaField)\r\n#if($column.insert && !$column.pk)\r\n#if(($column.usableColumn) || (!$column.superColumn))\r\n#set($parentheseIndex=$column.columnComment.indexOf(\"（\"))\r\n#if($parentheseIndex != -1)\r\n#set($comment=$column.columnComment.substring(0, $parentheseIndex))\r\n#else\r\n#set($comment=$column.columnComment)\r\n#end\r\n#set($dictType=$column.dictType)\r\n#if($column.htmlType == \"input\")\r\n        <el-form-item label=\"${comment}\" prop=\"${field}\">\r\n          <el-input v-model=\"form.${field}\" placeholder=\"请输入${comment}\" />\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"imageUpload\")\r\n        <el-form-item label=\"${comment}\">\r\n          <image-upload v-model=\"form.${field}\"/>\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"fileUpload\")\r\n        <el-form-item label=\"${comment}\">\r\n          <file-upload v-model=\"form.${field}\"/>\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"editor\")\r\n        <el-form-item label=\"${comment}\">\r\n          <editor v-model=\"form.${field}\" :min-height=\"192\"/>\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"select\" && \"\" != $dictType)\r\n        <el-form-item label=\"${comment}\" prop=\"${field}\">\r\n          <el-select v-model=\"form.${field}\" placeholder=\"请选择${comment}\">\r\n            <el-option\r\n              v-for=\"dict in dict.type.${dictType}\"\r\n              :key=\"dict.value\"\r\n              :label=\"dict.label\"\r\n              #if($column.javaType == \"Integer\" || $column.javaType == \"Long\"):value=\"parseInt(dict.value)\"#else:value=\"dict.value\"#end\r\n\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"select\" && $dictType)\r\n        <el-form-item label=\"${comment}\" prop=\"${field}\">\r\n          <el-select v-model=\"form.${field}\" placeholder=\"请选择${comment}\">\r\n            <el-option label=\"请选择字典生成\" value=\"\" />\r\n          </el-select>\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"checkbox\" && \"\" != $dictType)\r\n        <el-form-item label=\"${comment}\">\r\n          <el-checkbox-group v-model=\"form.${field}\">\r\n            <el-checkbox\r\n              v-for=\"dict in dict.type.${dictType}\"\r\n              :key=\"dict.value\"\r\n              :label=\"dict.value\">\r\n              {{dict.label}}\r\n            </el-checkbox>\r\n          </el-checkbox-group>\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"checkbox\" && $dictType)\r\n        <el-form-item label=\"${comment}\">\r\n          <el-checkbox-group v-model=\"form.${field}\">\r\n            <el-checkbox>请选择字典生成</el-checkbox>\r\n          </el-checkbox-group>\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"radio\" && \"\" != $dictType)\r\n        <el-form-item label=\"${comment}\">\r\n          <el-radio-group v-model=\"form.${field}\">\r\n            <el-radio\r\n              v-for=\"dict in dict.type.${dictType}\"\r\n              :key=\"dict.value\"\r\n              #if($column.javaType == \"Integer\" || $column.javaType == \"Long\"):label=\"parseInt(dict.value)\"#else:label=\"dict.value\"#end\r\n\r\n            >{{dict.label}}</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"radio\" && $dictType)\r\n        <el-form-item label=\"${comment}\">\r\n          <el-radio-group v-model=\"form.${field}\">\r\n            <el-radio label=\"1\">请选择字典生成</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"datetime\")\r\n        <el-form-item label=\"${comment}\" prop=\"${field}\">\r\n          <el-date-picker clearable\r\n            v-model=\"form.${field}\"\r\n            type=\"date\"\r\n            value-format=\"yyyy-MM-dd\"\r\n            placeholder=\"请选择${comment}\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n#elseif($column.htmlType == \"textarea\")\r\n        <el-form-item label=\"${comment}\" prop=\"${field}\">\r\n          <el-input v-model=\"form.${field}\" type=\"textarea\" placeholder=\"请输入内容\" />\r\n        </el-form-item>\r\n#end\r\n#end\r\n#end\r\n#end\r\n#if($table.sub)\r\n        <el-divider content-position=\"center\">${subTable.functionName}信息</el-divider>\r\n        <el-row :gutter=\"10\" class=\"mb8\">\r\n          <el-col :span=\"1.5\">\r\n            <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"mini\" @click=\"handleAdd${subClassName}\">添加</el-button>\r\n          </el-col>\r\n          <el-col :span=\"1.5\">\r\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"handleDelete${subClassName}\">删除</el-button>\r\n          </el-col>\r\n        </el-row>\r\n        <el-table :data=\"${subclassName}List\" :row-class-name=\"row${subClassName}Index\" @selection-change=\"handle${subClassName}SelectionChange\" ref=\"${subclassName}\">\r\n          <el-table-column type=\"selection\" width=\"50\" align=\"center\" />\r\n          <el-table-column label=\"序号\" align=\"center\" prop=\"index\" width=\"50\"/>\r\n#foreach($column in $subTable.columns)\r\n#set($javaField=$column.javaField)\r\n#set($parentheseIndex=$column.columnComment.indexOf(\"（\"))\r\n#if($parentheseIndex != -1)\r\n#set($comment=$column.columnComment.substring(0, $parentheseIndex))\r\n#else\r\n#set($comment=$column.columnComment)\r\n#end\r\n#if($column.pk || $javaField == ${subTableFkclassName})\r\n#elseif($column.list && $column.htmlType == \"input\")\r\n          <el-table-column label=\"$comment\" prop=\"${javaField}\" width=\"150\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input v-model=\"scope.row.$javaField\" placeholder=\"请输入$comment\" />\r\n            </template>\r\n          </el-table-column>\r\n#elseif($column.list && $column.htmlType == \"datetime\")\r\n          <el-table-column label=\"$comment\" prop=\"${javaField}\" width=\"240\">\r\n            <template slot-scope=\"scope\">\r\n              <el-date-picker clearable v-model=\"scope.row.$javaField\" type=\"date\" value-format=\"yyyy-MM-dd\" placeholder=\"请选择$comment\" />\r\n            </template>\r\n          </el-table-column>\r\n#elseif($column.list && ($column.htmlType == \"select\" || $column.htmlType == \"radio\") && \"\" != $column.dictType)\r\n          <el-table-column label=\"$comment\" prop=\"${javaField}\" width=\"150\">\r\n            <template slot-scope=\"scope\">\r\n              <el-select v-model=\"scope.row.$javaField\" placeholder=\"请选择$comment\">\r\n                <el-option\r\n                  v-for=\"dict in dict.type.$column.dictType\"\r\n                  :key=\"dict.value\"\r\n                  :label=\"dict.label\"\r\n                  :value=\"dict.value\"\r\n                ></el-option>\r\n              </el-select>\r\n            </template>\r\n          </el-table-column>\r\n#elseif($column.list && ($column.htmlType == \"select\" || $column.htmlType == \"radio\") && \"\" == $column.dictType)\r\n          <el-table-column label=\"$comment\" prop=\"${javaField}\" width=\"150\">\r\n            <template slot-scope=\"scope\">\r\n              <el-select v-model=\"scope.row.$javaField\" placeholder=\"请选择$comment\">\r\n                <el-option label=\"请选择字典生成\" value=\"\" />\r\n              </el-select>\r\n            </template>\r\n          </el-table-column>\r\n#end\r\n#end\r\n        </el-table>\r\n#end\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n        <el-button @click=\"cancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { list${BusinessName}, get${BusinessName}, del${BusinessName}, add${BusinessName}, update${BusinessName} } from \"@/api/${moduleName}/${businessName}\";\r\n\r\nexport default {\r\n  name: \"${BusinessName}\",\r\n#if(${dicts} != \'\')\r\n  dicts: [${dicts}],\r\n#end\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n#if($table.sub)\r\n      // 子表选中数据\r\n      checked${subClassName}: [],\r\n#end\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // ${functionName}表格数据\r\n      ${businessName}List: [],\r\n#if($table.sub)\r\n      // ${subTable.functionName}表格数据\r\n      ${subclassName}List: [],\r\n#end\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 是否显示弹出层\r\n      open: false,\r\n#foreach ($column in $columns)\r\n#if($column.htmlType == \"datetime\" && $column.queryType == \"BETWEEN\")\r\n#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})\r\n      // $comment时间范围\r\n      daterange${AttrName}: [],\r\n#end\r\n#end\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n#foreach ($column in $columns)\r\n#if($column.query)\r\n        $column.javaField: null#if($foreach.count != $columns.size()),#end\r\n#end\r\n#end\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n#foreach ($column in $columns)\r\n#if($column.required)\r\n#set($parentheseIndex=$column.columnComment.indexOf(\"（\"))\r\n#if($parentheseIndex != -1)\r\n#set($comment=$column.columnComment.substring(0, $parentheseIndex))\r\n#else\r\n#set($comment=$column.columnComment)\r\n#end\r\n        $column.javaField: [\r\n          { required: true, message: \"$comment不能为空\", trigger: #if($column.htmlType == \"select\")\"change\"#else\"blur\"#end }\r\n        ]#if($foreach.count != $columns.size()),#end\r\n#end\r\n#end\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    /** 查询${functionName}列表 */\r\n    getList() {\r\n      this.loading = true;\r\n#foreach ($column in $columns)\r\n#if($column.htmlType == \"datetime\" && $column.queryType == \"BETWEEN\")\r\n      this.queryParams.params = {};\r\n#break\r\n#end\r\n#end\r\n#foreach ($column in $columns)\r\n#if($column.htmlType == \"datetime\" && $column.queryType == \"BETWEEN\")\r\n#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})\r\n      if (null != this.daterange${AttrName} && \'\' != this.daterange${AttrName}) {\r\n        this.queryParams.params[\"begin${AttrName}\"] = this.daterange${AttrName}[0];\r\n        this.queryParams.params[\"end${AttrName}\"] = this.daterange${AttrName}[1];\r\n      }\r\n#end\r\n#end\r\n      list${BusinessName}(this.queryParams).then(response => {\r\n        this.${businessName}List = response.rows;\r\n        this.total = response.total;\r\n        this.loading = false;\r\n      });\r\n    },\r\n    // 取消按钮\r\n    cancel() {\r\n      this.open = false;\r\n      this.reset();\r\n    },\r\n    // 表单重置\r\n    reset() {\r\n      this.form = {\r\n#foreach ($column in $columns)\r\n#if($column.htmlType == \"radio\")\r\n        $column.javaField: #if($column.javaType == \"Integer\" || $column.javaType == \"Long\")0#else\"0\"#end#if($foreach.count != $columns.size()),#end\r\n#elseif($column.htmlType == \"checkbox\")\r\n        $column.javaField: []#if($foreach.count != $columns.size()),#end\r\n#else\r\n        $column.javaField: null#if($foreach.count != $columns.size()),#end\r\n#end\r\n#end\r\n      };\r\n#if($table.sub)\r\n      this.${subclassName}List = [];\r\n#end\r\n      this.resetForm(\"form\");\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList();\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery() {\r\n#foreach ($column in $columns)\r\n#if($column.htmlType == \"datetime\" && $column.queryType == \"BETWEEN\")\r\n#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})\r\n      this.daterange${AttrName} = [];\r\n#end\r\n#end\r\n      this.resetForm(\"queryForm\");\r\n      this.handleQuery();\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.ids = selection.map(item => item.${pkColumn.javaField})\r\n      this.single = selection.length!==1\r\n      this.multiple = !selection.length\r\n    },\r\n    /** 新增按钮操作 */\r\n    handleAdd() {\r\n      this.reset();\r\n      this.open = true;\r\n      this.title = \"添加${functionName}\";\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate(row) {\r\n      this.reset();\r\n      const ${pkColumn.javaField} = row.${pkColumn.javaField} || this.ids\r\n      get${BusinessName}(${pkColumn.javaField}).then(response => {\r\n        this.form = response.data;\r\n#foreach ($column in $columns)\r\n#if($column.htmlType == \"checkbox\")\r\n        this.form.$column.javaField = this.form.${column.javaField}.split(\",\");\r\n#end\r\n#end\r\n#if($table.sub)\r\n        this.${subclassName}List = response.data.${subclassName}List;\r\n#end\r\n        this.open = true;\r\n        this.title = \"修改${functionName}\";\r\n      });\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm() {\r\n      this.#[[$]]#refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n#foreach ($column in $columns)\r\n#if($column.htmlType == \"checkbox\")\r\n          this.form.$column.javaField = this.form.${column.javaField}.join(\",\");\r\n#end\r\n#end\r\n#if($table.sub)\r\n          this.form.${subclassName}List = this.${subclassName}List;\r\n#end\r\n          if (this.form.${pkColumn.javaField} != null) {\r\n            update${BusinessName}(this.form).then(response => {\r\n              this.#[[$modal]]#.msgSuccess(\"修改成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n          } else {\r\n            add${BusinessName}(this.form).then(response => {\r\n              this.#[[$modal]]#.msgSuccess(\"新增成功\");\r\n              this.open = false;\r\n              this.getList();\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      const ${pkColumn.javaField}s = row.${pkColumn.javaField} || this.ids;\r\n      this.#[[$modal]]#.confirm(\'是否确认删除${functionName}编号为\"\' + ${pkColumn.javaField}s + \'\"的数据项？\').then(function() {\r\n        return del${BusinessName}(${pkColumn.javaField}s);\r\n      }).then(() => {\r\n        this.getList();\r\n        this.#[[$modal]]#.msgSuccess(\"删除成功\");\r\n      }).catch(() => {});\r\n    },\r\n#if($table.sub)\r\n	/** ${subTable.functionName}序号 */\r\n    row${subClassName}Index({ row, rowIndex }) {\r\n      row.index = rowIndex + 1;\r\n    },\r\n    /** ${subTable.functionName}添加按钮操作 */\r\n    handleAdd${subClassName}() {\r\n      let obj = {};\r\n#foreach($column in $subTable.columns)\r\n#if($column.pk || $column.javaField == ${subTableFkclassName})\r\n#elseif($column.list && \"\" != $javaField)\r\n      obj.$column.javaField = \"\";\r\n#end\r\n#end\r\n      this.${subclassName}List.push(obj);\r\n    },\r\n    /** ${subTable.functionName}删除按钮操作 */\r\n    handleDelete${subClassName}() {\r\n      if (this.checked${subClassName}.length == 0) {\r\n        this.#[[$modal]]#.msgError(\"请先选择要删除的${subTable.functionName}数据\");\r\n      } else {\r\n        const ${subclassName}List = this.${subclassName}List;\r\n        const checked${subClassName} = this.checked${subClassName};\r\n        this.${subclassName}List = ${subclassName}List.filter(function(item) {\r\n          return checked${subClassName}.indexOf(item.index) == -1\r\n        });\r\n      }\r\n    },\r\n    /** 复选框选中数据 */\r\n    handle${subClassName}SelectionChange(selection) {\r\n      this.checked${subClassName} = selection.map(item => item.index)\r\n    },\r\n#end\r\n    /** 导出按钮操作 */\r\n    handleExport() {\r\n      this.download(\'${moduleName}/${businessName}/export\', {\r\n        ...this.queryParams\r\n      }, `${businessName}_#[[${new Date().getTime()}]]#.xlsx`)\r\n    }\r\n  }\r\n};\r\n</script>\r\n', 'vm/ruoyi/vue/index.vue.vm', 'index.vue.vm', 'vue', '2022-10-29 01:03:16', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (74, 64, 'mapper', 'F', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<!DOCTYPE mapper\r\nPUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\r\n\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"${packageName}.mapper.${ClassName}Mapper\">\r\n    \r\n    <resultMap type=\"${ClassName}\" id=\"${ClassName}Result\">\r\n#foreach ($column in $columns)\r\n        <result property=\"${column.javaField}\"    column=\"${column.columnName}\"    />\r\n#end\r\n    </resultMap>\r\n#if($table.sub)\r\n\r\n    <resultMap id=\"${ClassName}${subClassName}Result\" type=\"${ClassName}\" extends=\"${ClassName}Result\">\r\n        <collection property=\"${subclassName}List\" notNullColumn=\"sub_${subTable.pkColumn.columnName}\" javaType=\"java.util.List\" resultMap=\"${subClassName}Result\" />\r\n    </resultMap>\r\n\r\n    <resultMap type=\"${subClassName}\" id=\"${subClassName}Result\">\r\n#foreach ($column in $subTable.columns)\r\n        <result property=\"${column.javaField}\"    column=\"sub_${column.columnName}\"    />\r\n#end\r\n    </resultMap>\r\n#end\r\n\r\n    <sql id=\"select${ClassName}Vo\">\r\n        select#foreach($column in $columns) $column.columnName#if($foreach.count != $columns.size()),#end#end from ${tableName}\r\n    </sql>\r\n\r\n    <select id=\"select${ClassName}List\" parameterType=\"${ClassName}\" resultMap=\"${ClassName}Result\">\r\n        <include refid=\"select${ClassName}Vo\"/>\r\n        <where>  \r\n#foreach($column in $columns)\r\n#set($queryType=$column.queryType)\r\n#set($javaField=$column.javaField)\r\n#set($javaType=$column.javaType)\r\n#set($columnName=$column.columnName)\r\n#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})\r\n#if($column.query)\r\n#if($column.queryType == \"EQ\")\r\n            <if test=\"$javaField != null #if($javaType == \'String\' ) and $javaField.trim() != \'\'#end\"> and $columnName = #{$javaField}</if>\r\n#elseif($queryType == \"NE\")\r\n            <if test=\"$javaField != null #if($javaType == \'String\' ) and $javaField.trim() != \'\'#end\"> and $columnName != #{$javaField}</if>\r\n#elseif($queryType == \"GT\")\r\n            <if test=\"$javaField != null #if($javaType == \'String\' ) and $javaField.trim() != \'\'#end\"> and $columnName &gt; #{$javaField}</if>\r\n#elseif($queryType == \"GTE\")\r\n            <if test=\"$javaField != null #if($javaType == \'String\' ) and $javaField.trim() != \'\'#end\"> and $columnName &gt;= #{$javaField}</if>\r\n#elseif($queryType == \"LT\")\r\n            <if test=\"$javaField != null #if($javaType == \'String\' ) and $javaField.trim() != \'\'#end\"> and $columnName &lt; #{$javaField}</if>\r\n#elseif($queryType == \"LTE\")\r\n            <if test=\"$javaField != null #if($javaType == \'String\' ) and $javaField.trim() != \'\'#end\"> and $columnName &lt;= #{$javaField}</if>\r\n#elseif($queryType == \"LIKE\")\r\n            <if test=\"$javaField != null #if($javaType == \'String\' ) and $javaField.trim() != \'\'#end\"> and $columnName like concat(\'%\', #{$javaField}, \'%\')</if>\r\n#elseif($queryType == \"BETWEEN\")\r\n            <if test=\"params.begin$AttrName != null and params.begin$AttrName != \'\' and params.end$AttrName != null and params.end$AttrName != \'\'\"> and $columnName between #{params.begin$AttrName} and #{params.end$AttrName}</if>\r\n#end\r\n#end\r\n#end\r\n        </where>\r\n    </select>\r\n    \r\n    <select id=\"select${ClassName}By${pkColumn.capJavaField}\" parameterType=\"${pkColumn.javaType}\" resultMap=\"#if($table.sub)${ClassName}${subClassName}Result#else${ClassName}Result#end\">\r\n#if($table.crud || $table.tree)\r\n        <include refid=\"select${ClassName}Vo\"/>\r\n        where ${pkColumn.columnName} = #{${pkColumn.javaField}}\r\n#elseif($table.sub)\r\n        select#foreach($column in $columns) a.$column.columnName#if($foreach.count != $columns.size()),#end#end,\r\n           #foreach($column in $subTable.columns) b.$column.columnName as sub_$column.columnName#if($foreach.count != $subTable.columns.size()),#end#end\r\n\r\n        from ${tableName} a\r\n        left join ${subTableName} b on b.${subTableFkName} = a.${pkColumn.columnName}\r\n        where a.${pkColumn.columnName} = #{${pkColumn.javaField}}\r\n#end\r\n    </select>\r\n        \r\n    <insert id=\"insert${ClassName}\" parameterType=\"${ClassName}\"#if($pkColumn.increment) useGeneratedKeys=\"true\" keyProperty=\"$pkColumn.javaField\"#end>\r\n        insert into ${tableName}\r\n        <trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\">\r\n#foreach($column in $columns)\r\n#if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)\r\n            <if test=\"$column.javaField != null#if($column.javaType == \'String\' && $column.required) and $column.javaField != \'\'#end\">$column.columnName,</if>\r\n#end\r\n#end\r\n         </trim>\r\n        <trim prefix=\"values (\" suffix=\")\" suffixOverrides=\",\">\r\n#foreach($column in $columns)\r\n#if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)\r\n            <if test=\"$column.javaField != null#if($column.javaType == \'String\' && $column.required) and $column.javaField != \'\'#end\">#{$column.javaField},</if>\r\n#end\r\n#end\r\n         </trim>\r\n    </insert>\r\n\r\n    <update id=\"update${ClassName}\" parameterType=\"${ClassName}\">\r\n        update ${tableName}\r\n        <trim prefix=\"SET\" suffixOverrides=\",\">\r\n#foreach($column in $columns)\r\n#if($column.columnName != $pkColumn.columnName)\r\n            <if test=\"$column.javaField != null#if($column.javaType == \'String\' && $column.required) and $column.javaField != \'\'#end\">$column.columnName = #{$column.javaField},</if>\r\n#end\r\n#end\r\n        </trim>\r\n        where ${pkColumn.columnName} = #{${pkColumn.javaField}}\r\n    </update>\r\n\r\n    <delete id=\"delete${ClassName}By${pkColumn.capJavaField}\" parameterType=\"${pkColumn.javaType}\">\r\n        delete from ${tableName} where ${pkColumn.columnName} = #{${pkColumn.javaField}}\r\n    </delete>\r\n\r\n    <delete id=\"delete${ClassName}By${pkColumn.capJavaField}s\" parameterType=\"String\">\r\n        delete from ${tableName} where ${pkColumn.columnName} in \r\n        <foreach item=\"${pkColumn.javaField}\" collection=\"array\" open=\"(\" separator=\",\" close=\")\">\r\n            #{${pkColumn.javaField}}\r\n        </foreach>\r\n    </delete>\r\n#if($table.sub)\r\n    \r\n    <delete id=\"delete${subClassName}By${subTableFkClassName}s\" parameterType=\"String\">\r\n        delete from ${subTableName} where ${subTableFkName} in \r\n        <foreach item=\"${subTableFkclassName}\" collection=\"array\" open=\"(\" separator=\",\" close=\")\">\r\n            #{${subTableFkclassName}}\r\n        </foreach>\r\n    </delete>\r\n\r\n    <delete id=\"delete${subClassName}By${subTableFkClassName}\" parameterType=\"${pkColumn.javaType}\">\r\n        delete from ${subTableName} where ${subTableFkName} = #{${subTableFkclassName}}\r\n    </delete>\r\n\r\n    <insert id=\"batch${subClassName}\">\r\n        insert into ${subTableName}(#foreach($column in $subTable.columns) $column.columnName#if($foreach.count != $subTable.columns.size()),#end#end) values\r\n		<foreach item=\"item\" index=\"index\" collection=\"list\" separator=\",\">\r\n            (#foreach($column in $subTable.columns) #{item.$column.javaField}#if($foreach.count != $subTable.columns.size()),#end#end)\r\n        </foreach>\r\n    </insert>\r\n#end\r\n</mapper>', 'vm/ruoyi/xml/mapper.xml.vm', 'mapper.xml.vm', 'xml', '2022-10-29 01:04:04', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (75, 1, 'mall', 'M', '', 'vm/mall', NULL, NULL, '2023-04-29 12:02:12', NULL, '0', NULL);
INSERT INTO `gen_template` VALUES (76, 75, 'mapper', 'F', 'package ${packageName}.mapper;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport cn.noobzz.mall.core.domain.${ClassName};\n\n/**\n * ${functionName}Mapper接口\n * \n * @author ${author}\n * @date ${datetime}\n */\npublic interface ${ClassName}Mapper extends BaseMapper<${ClassName}>\n{\n\n}', 'vm/mall/mapper.java.vm', 'mapper.java.vm', 'java', '2023-05-04 21:57:47', NULL, '0', '2023-05-11 00:28:12');
INSERT INTO `gen_template` VALUES (77, 75, 'domain', 'F', 'package cn.noobzz.mall.core.domain;\n\nimport cn.noobzz.mall.core.base.BaseDomain;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport lombok.ToString;\n\n/**\n * ${functionName}对象 ${tableName}\n * \n * @author ZZJ\n * @date ${datetime}\n */\n@Data\n@ToString\n@NoArgsConstructor\n@TableName(\"${tableName}\")\npublic class ${ClassName} extends BaseDomain\n{\n    private static final long serialVersionUID = 1L;\n\n#foreach ($column in $columns)\n#if(!$table.isSuperColumn($column.javaField))\n    /** $column.columnComment */\n#if($column.list)\n#set($parentheseIndex=$column.columnComment.indexOf(\"（\"))\n#if($parentheseIndex != -1)\n#set($comment=$column.columnComment.substring(0, $parentheseIndex))\n#else\n#set($comment=$column.columnComment)\n#end\n#end\n    private $column.javaType $column.javaField;\n#end     \n#end    \n}\n', 'vm/mall/domain.java.vm', 'domain.java.vm', 'java', '2023-05-04 22:04:42', NULL, '0', '2023-05-11 00:58:35');
INSERT INTO `gen_template` VALUES (78, 75, 'service', 'F', 'package ${packageName}service;\n\nimport cn.noobzz.mall.core.domain.${ClassName};\nimport com.baomidou.mybatisplus.extension.service.IService;\n\n/**\n * ${functionName}Service接口\n * \n * @author ${author}\n * @date ${datetime}\n */\npublic interface I${ClassName}Service extends IService<${ClassName}> {\n\n}', 'vm/mall/service.java.vm', 'service.java.vm', 'java', '2023-05-10 17:40:44', NULL, '0', '2023-05-10 19:10:39');
INSERT INTO `gen_template` VALUES (79, 75, 'serviceImpl', 'F', 'package ${packageName}.service.Impl;\n\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport ${packageName}.mapper.${ClassName}Mapper;\nimport cn.noobzz.mall.core.domain.${ClassName};\nimport ${packageName}.service.I${ClassName}Service;\n\n/**\n * ${functionName}Service业务层处理\n * \n * @author ${author}\n * @date ${datetime}\n */\n@Service\npublic class ${ClassName}ServiceImpl extends ServiceImpl<${ClassName}Mapper, ${ClassName}> implements I${ClassName}Service {\n\n}', 'vm/mall/serviceImpl.java.vm', 'serviceImpl.java.vm', 'java', '2023-05-11 00:39:17', NULL, '0', '2023-05-11 00:40:32');
INSERT INTO `gen_template` VALUES (80, 75, 'controller', 'F', 'package ${packageName}.controller;\n\nimport java.util.List;\nimport java.util.Arrays;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport cn.noobzz.mall.core.domain.${ClassName};\nimport ${packageName}.service.I${ClassName}Service;\nimport cn.noobzz.mall.core.base.BaseController;\nimport cn.noobzz.mall.core.base.Result;\n\n/**\n * ${functionName}Controller\n * \n * @author ${author}\n * @date ${datetime}\n */\n@RestController\n@RequestMapping(\"/${businessName}\")\npublic class ${ClassName}Controller extends BaseController\n{\n    @Autowired\n    private I${ClassName}Service ${className}Service;\n\n    /**\n     * 查询${functionName}列表\n     */\n    @GetMapping(\"/list\")\n    public Result list(${ClassName} ${className})\n    {\n       return toAjax( ${className}Service.list());\n    }\n\n    /**\n     * 获取${functionName}详细信息\n     */\n    @GetMapping(value = \"/{${pkColumn.javaField}}\")\n    public Result getInfo(@PathVariable(\"${pkColumn.javaField}\") ${pkColumn.javaType} ${pkColumn.javaField})\n    {\n        return Result.success(${className}Service.getById(${pkColumn.javaField}));\n    }\n\n    /**\n     * 新增${functionName}\n     */\n    @PostMapping\n    public Result add(@RequestBody ${ClassName} ${className})\n    {\n        return toAjax(${className}Service.save(${className}));\n    }\n\n    /**\n     * 修改${functionName}\n     */\n    @PutMapping\n    public Result edit(@RequestBody ${ClassName} ${className})\n    {\n        return toAjax(${className}Service.updateById(${className}));\n    }\n\n    /**\n     * 删除${functionName}\n     */\n	@DeleteMapping(\"/{${pkColumn.javaField}s}\")\n    public Result remove(@PathVariable ${pkColumn.javaType}[] ${pkColumn.javaField}s)\n    {\n        return toAjax(${className}Service.removeByIds(Arrays.asList(${pkColumn.javaField}s)));\n    }\n}\n', 'vm/mall/controller.java.vm', 'controller.java.vm', 'java', '2023-05-10 17:52:49', NULL, '0', '2023-05-11 00:43:32');

-- ----------------------------
-- Table structure for test_table
-- ----------------------------
DROP TABLE IF EXISTS `test_table`;
CREATE TABLE `test_table`  (
  `id` int NOT NULL,
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of test_table
-- ----------------------------

SET FOREIGN_KEY_CHECKS = 1;
